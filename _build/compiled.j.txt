// this script was compiled with wurst 1.8.1.0-jenkins-Wurst-1324
globals
// real bj_GAME_STARTED_THRESHOLD=0.
// integer bj_MAX_PLAYERS=0
// integer bj_PLAYER_NEUTRAL_VICTIM=0
// integer bj_MAX_PLAYER_SLOTS=0
// integer bj_MAX_SKELETONS=0
// integer bj_MAX_STOCK_ITEM_SLOTS=0
// integer bj_MAX_STOCK_UNIT_SLOTS=0
// integer bj_MAX_ITEM_LEVEL=0
// real bj_TOD_DAWN=0.
// real bj_TOD_DUSK=0.
// real bj_STOCK_RESTOCK_INITIAL_DELAY=0.
// real bj_STOCK_RESTOCK_INTERVAL=0.
// integer bj_STOCK_MAX_ITERATIONS=0
// real bj_RESCUE_PING_TIME=0.
// integer bj_MAX_QUEUED_TRIGGERS=0
// real bj_QUEUED_TRIGGER_TIMEOUT=0.
// real bj_CORPSE_MAX_DEATH_TIME=0.
// force bj_FORCE_ALL_PLAYERS=null
// timer bj_gameStartedTimer=null
// trigger bj_dncSoundsDay=null
// trigger bj_dncSoundsNight=null
// sound bj_dayAmbientSound=null
// sound bj_nightAmbientSound=null
// trigger bj_dncSoundsDawn=null
// trigger bj_dncSoundsDusk=null
// sound bj_dawnSound=null
// sound bj_duskSound=null
// boolean bj_useDawnDuskSounds=false
// boolean bj_dncIsDaytime=false
// sound bj_rescueSound=null
// trigger bj_stockItemPurchased=null
// timer bj_stockUpdateTimer=null
// integer bj_stockPickedItemLevel=0
// itemtype bj_stockPickedItemType=null
// trigger bj_rescueUnitBehavior=null
// boolean bj_rescueChangeColorUnit=false
// boolean bj_rescueChangeColorBldg=false
// integer bj_queuedExecTotal=0
// timer bj_queuedExecTimeoutTimer=null
// trigger bj_queuedExecTimeout=null
// integer bj_groupEnumTypeId=0
// player bj_groupEnumOwningPlayer=null
// location bj_enumDestructableCenter=null
// real bj_enumDestructableRadius=0.
// group bj_suspendDecayFleshGroup=null
// group bj_suspendDecayBoneGroup=null
// timer bj_delayedSuspendDecayTimer=null
// trigger bj_delayedSuspendDecayTrig=null
// integer bj_livingPlayerUnitsTypeId=0
// integer PLAYER_NEUTRAL_PASSIVE=0
// integer PLAYER_NEUTRAL_AGGRESSIVE=0
// alliancetype ALLIANCE_PASSIVE=null
// alliancetype ALLIANCE_HELP_REQUEST=null
// alliancetype ALLIANCE_HELP_RESPONSE=null
// alliancetype ALLIANCE_SHARED_XP=null
// alliancetype ALLIANCE_SHARED_SPELLS=null
// alliancetype ALLIANCE_SHARED_VISION=null
// version VERSION_REIGN_OF_CHAOS=null
// racepreference RACE_PREF_HUMAN=null
// racepreference RACE_PREF_ORC=null
// racepreference RACE_PREF_NIGHTELF=null
// racepreference RACE_PREF_UNDEAD=null
// mapcontrol MAP_CONTROL_USER=null
// mapcontrol MAP_CONTROL_COMPUTER=null
// mapcontrol MAP_CONTROL_RESCUABLE=null
// placement MAP_PLACEMENT_TEAMS_TOGETHER=null
// startlocprio MAP_LOC_PRIO_HIGH=null
// playerslotstate PLAYER_SLOT_STATE_PLAYING=null
// fgamestate GAME_STATE_TIME_OF_DAY=null
// playerstate PLAYER_STATE_GIVES_BOUNTY=null
// unitstate UNIT_STATE_LIFE=null
// playerevent EVENT_PLAYER_LEAVE=null
// playerunitevent EVENT_PLAYER_UNIT_ATTACKED=null
// playerunitevent EVENT_PLAYER_UNIT_RESCUED=null
// unitevent EVENT_UNIT_DAMAGED=null
// playerunitevent EVENT_PLAYER_UNIT_SELL_ITEM=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_CAST=null
// playerunitevent EVENT_PLAYER_UNIT_SPELL_EFFECT=null
// limitop LESS_THAN=null
// limitop EQUAL=null
// limitop GREATER_THAN_OR_EQUAL=null
// unittype UNIT_TYPE_HERO=null
// unittype UNIT_TYPE_STRUCTURE=null
// itemtype ITEM_TYPE_PERMANENT=null
// itemtype ITEM_TYPE_CHARGED=null
// itemtype ITEM_TYPE_ARTIFACT=null
// integer CAMERA_MARGIN_LEFT=0
// integer CAMERA_MARGIN_RIGHT=0
// integer CAMERA_MARGIN_TOP=0
// integer CAMERA_MARGIN_BOTTOM=0
trigger gg_trg_______u=null
real Basics_ANIMATION_PERIOD=0.
player Basics_DUMMY_PLAYER=null
playerevent ClosureEvents_EVENT_PLAYER_CHAT_FILTER=null
trigger ClosureEvents_unitTrig=null
trigger ClosureEvents_leaveTrig=null
trigger ClosureEvents_keyTrig=null
integer array ClosureEvents_eventidToIndex
integer ClosureEvents_eventTypeCounter=0
code ClosureEvents_cb3=null
integer EventListener_castMap=0
integer EventListener_castMapCasters=0
integer array EventListener_generalListenersFirsts
integer ClosureTimers_ItimerShuliang=0
integer ClosureTimers_ItimerShuliang1=0
integer ClosureTimers_x=0
integer ErrorHandling_MUTE_ERROR_DURATION=0
integer ErrorHandling_PRIMARY_ERROR_KEY=0
hashtable ErrorHandling_HT=null
boolean ErrorHandling_suppressErrorMessages=false
real Framehandle_SCREEN_TOP_x=0.
real Framehandle_SCREEN_TOP_y=0.
real Framehandle_SCREEN_BOTTOM_x=0.
real Framehandle_SCREEN_BOTTOM_y=0.
real GameTimer_currentTime=0.
string array Integer_hexs
integer Integer_decs=0
boolean MagicFunctions_compiletime=false
real Matrices_ZERO44_m00=0.
real Matrices_ZERO44_m01=0.
real Matrices_ZERO44_m02=0.
real Matrices_ZERO44_m03=0.
real Matrices_ZERO44_m10=0.
real Matrices_ZERO44_m11=0.
real Matrices_ZERO44_m12=0.
real Matrices_ZERO44_m13=0.
real Matrices_ZERO44_m20=0.
real Matrices_ZERO44_m21=0.
real Matrices_ZERO44_m22=0.
real Matrices_ZERO44_m23=0.
real Matrices_ZERO44_m30=0.
real Matrices_ZERO44_m31=0.
real Matrices_ZERO44_m32=0.
real Matrices_ZERO44_m33=0.
player array Player_players
player Player_localPlayer=null
integer Printing_DEBUG_LEVEL=0
real Printing_DEBUG_MSG_DURATION=0.
trigger array RegisterEvents_t
integer RegisterEvents_onCastMap=0
boolean StdLibConfig_STD_WURST_DEBUG=false
string String_charset=null
string String_numberset=null
hashtable Table_ht=null
timer array TimerUtils_freeTimers
integer TimerUtils_freeTimersCount=0
integer TimerUtils_timerData=0
integer TimerUtils_HELD=0
integer TypeCasting_typecastdata=0
hashtable hashtable_compiletime=null
hashtable hashtable_compiletime_189=null
integer array CallbackSingle_nextFree
integer CallbackSingle_firstFree=0
integer CallbackSingle_maxIndex=0
integer array CallbackSingle_typeId
integer array EventListener_nextFree
integer EventListener_firstFree=0
integer EventListener_maxIndex=0
integer array EventListener_typeId
integer array OnCastListener_typeId
integer array CallbackPeriodic_nextFree
integer CallbackPeriodic_firstFree=0
integer CallbackPeriodic_maxIndex=0
integer array CallbackPeriodic_typeId
integer array Table_nextFree
integer Table_firstFree=0
integer Table_maxIndex=0
integer array EventListener_eventId
integer array EventListener_next
integer array OnCastListener_next
integer array OnCastListener_abilId
unit array OnCastListener_eventUnit
timer array CallbackPeriodic_t
timer array CallbackSingle_t
unit array this
real array ang_radians
integer array count
real real_asAngleRadians_return_radians=0.
real unit_getPos_return_x=0.
real unit_getPos_return_y=0.
real EventData_getAbilityTargetPos_return_x=0.
real EventData_getAbilityTargetPos_return_y=0.
real EventData_getSpellTargetPos_return_x=0.
real EventData_getSpellTargetPos_return_y=0.
real vec2_op_plus_return_x=0.
real vec2_op_plus_return_y=0.
real vec2_angleTo_return_radians=0.
real angle_toVec_return_x=0.
real angle_toVec_return_y=0.
real vec2_polarOffset_return_x=0.
real vec2_polarOffset_return_y=0.
code ref_function_Trig_______uActions=null
code ref_function_init_Real=null
code ref_function_init_MagicFunctions=null
code ref_function_init_Table=null
code ref_function_init_Integer=null
code ref_function_init_Angle=null
code ref_function_init_String=null
code ref_function_init_Vectors=null
code ref_function_init_StdLibConfig=null
code ref_function_init_YD_native=null
code ref_function_init_Destructable=null
code ref_function_init_Orders=null
code ref_function_init_Player=null
code ref_function_init_Basics=null
code ref_function_init_YD_LuaEngine=null
code ref_function_init_Ability=null
code ref_function_init_Maths=null
code ref_function_init_Printing=null
code ref_function_init_GameTimer=null
code ref_function_init_ErrorHandling=null
code ref_function_init_Matrices=null
code ref_function_init_Quaternion=null
code ref_function_init_Colors=null
code ref_function_init_Effect=null
code ref_function_init_Framehandle=null
code ref_function_init_Group=null
code ref_function_init_Lightning=null
code ref_function_init_Playercolor=null
code ref_function_init_WeatherEffects=null
code ref_function_init_TypeCasting=null
code ref_function_init_HashList=null
code ref_function_init_EventHelper=null
code ref_function_init_BitwiseInit=null
code ref_function_init_RegisterEvents=null
code ref_function_init_TimerUtils=null
code ref_function_init_ClosureTimers=null
code ref_function_init_ClosureEvents=null
code ref_function_init_MapInit=null
code ref_function_code__ClosureEvents=null
code ref_function_EventListener_generalEventCallback=null
code ref_function_code__startPeriodic_GameTimer=null
code ref_function_code__registerPlayerUnitEvent_RegisterEvents=null
code ref_function_code__registerPlayerUnitEvent_nullTimer_ClosureEvents=null
code ref_function_CallbackPeriodic_staticCallback=null
code ref_function_code__start_CallbackSingle_ClosureTimers=null
timer getTimertempReturn=null
trigger dispatch_Table_Table_Table_loadTriggertempReturn=null
endglobals
native DzGetGameUI takes nothing returns integer
function CreateCameras takes nothing returns nothing
endfunction

function CreateDestructables takes nothing returns nothing
endfunction

function CreateItems takes nothing returns nothing
endfunction

function CreateRegions takes nothing returns nothing
endfunction

function CreateUnits takes nothing returns nothing
	call CreateUnit(Player(0), 1215324524,  - 263.7,  - 278.7, 271.5)
	call CreateUnit(Player(1), 1215324524, 29.3,  - 278.7, 321.6)
	call CreateUnit(Player(2), 1751343475,  - 64.0,  - 832.0, 270.0)
	call CreateUnit(Player(3), 1969711215, 1745.9,  - 922.5, 16.7)
	call CreateUnit(Player(3), 1969711215, 1723.2,  - 1114.5, 92.3)
	call CreateUnit(Player(3), 1969711215, 1705.4,  - 1244.8, 348.2)
	call CreateUnit(Player(3), 1969711215, 1703.1,  - 1333.4, 342.3)
	call CreateUnit(Player(3), 1969711215, 1700.9,  - 1420.4, 159.1)
	call CreateUnit(Player(3), 1969711215, 1700.2,  - 1494.8, 251.4)
	call CreateUnit(Player(3), 1969711215, 1697.9,  - 1557.0, 161.0)
	call CreateUnit(Player(3), 1969711215, 1958.6,  - 935.0, 33.5)
	call CreateUnit(Player(3), 1969711215, 1901.6,  - 1295.1, 109.1)
	call CreateUnit(Player(3), 1969711215, 1900.9,  - 1401.7, 323.3)
	call CreateUnit(Player(3), 1969711215, 1905.0,  - 1476.3, 280.6)
	call CreateUnit(Player(3), 1969711215, 1954.3,  - 1130.5, 278.3)
endfunction

function InitTrig_______u takes nothing returns nothing
	set gg_trg_______u = CreateTrigger()
	call TriggerRegisterTimerEventSingle(gg_trg_______u, 1.00)
	call TriggerAddAction(gg_trg_______u, ref_function_Trig_______uActions)
endfunction

function InitCustomTriggers takes nothing returns nothing
	call InitTrig_______u()
endfunction

function InitGlobals takes nothing returns nothing
endfunction

function InitRandomGroups takes nothing returns nothing
endfunction

function InitSounds takes nothing returns nothing
endfunction

function RunInitializationTriggers takes nothing returns nothing
endfunction

function YDTriggerSaveLoadSystem__Init takes nothing returns nothing
	call InitHashtable()
	call InitHashtable()
endfunction

function Loglevel_getTag takes integer this_1 returns string
	local integer temp = this_1
	if temp == 0 then
		return "|cffADADADtrace|r"
	elseif temp == 1 then
		return "|cff2685DCdebug|r"
	elseif temp == 2 then
		return "|cffFFCC00info|r"
	elseif temp == 3 then
		return "|cffF47E3Ewarning|r"
	else
		return "|cffFB2700error|r"
	endif
endfunction

function printLog takes player showTo, integer loglvl, string msg returns nothing
	local string compositeMsg
	if StdLibConfig_STD_WURST_DEBUG then
		if Printing_DEBUG_LEVEL <= loglvl then
			set compositeMsg = Loglevel_getTag(loglvl) + " - " + msg
			call DisplayTimedTextToPlayer(showTo, 0., 0., Printing_DEBUG_MSG_DURATION, compositeMsg)
		endif
	endif
endfunction

function Log_error takes string msg returns nothing
	call printLog(Player_localPlayer, 4, msg)
endfunction

function compileError takes string msg returns nothing
endfunction

function hashtable_hasBoolean takes hashtable this_1, integer parentKey, integer childKey returns boolean
	return HaveSavedBoolean(this_1, parentKey, childKey)
endfunction

function hashtable_hasInt takes hashtable this_1, integer parentKey, integer childKey returns boolean
	return HaveSavedInteger(this_1, parentKey, childKey)
endfunction

function hashtable_loadBoolean takes hashtable this_1, integer parentKey, integer childKey returns boolean
	return LoadBoolean(this_1, parentKey, childKey)
endfunction

function hashtable_loadInt takes hashtable this_1, integer parentKey, integer childKey returns integer
	return LoadInteger(this_1, parentKey, childKey)
endfunction

function hashtable_saveBoolean takes hashtable this_1, integer parentKey, integer childKey, boolean value returns nothing
	call SaveBoolean(this_1, parentKey, childKey, value)
endfunction

function hashtable_saveInt takes hashtable this_1, integer parentKey, integer childKey, integer value returns nothing
	call SaveInteger(this_1, parentKey, childKey, value)
endfunction

function real_toInt takes real this_1 returns integer
	return R2I(this_1)
endfunction

function string_getHash takes string this_1 returns integer
	return StringHash(this_1)
endfunction

function error takes string msg returns nothing
	local integer hash
	if MagicFunctions_compiletime then
		call compileError("ERROR: " + msg)
	else
		if  not ErrorHandling_suppressErrorMessages then
			set hash = string_getHash(msg)
			if hashtable_hasInt(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash) then
				if hashtable_loadInt(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash) + ErrorHandling_MUTE_ERROR_DURATION < GameTimer_currentTime then
					call Log_error(msg + "")
					call hashtable_saveInt(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash, real_toInt(GameTimer_currentTime))
					call hashtable_saveBoolean(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash, false)
				elseif hashtable_hasBoolean(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash) then
					if  not hashtable_loadBoolean(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash) then
						call Log_error("|cffFF3A29Excessive repeating errors are being omitted")
						call hashtable_saveBoolean(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash, true)
					endif
				else
					call Log_error("|cffFF3A29Excessive repeating errors are being omitted")
					call hashtable_saveBoolean(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash, true)
				endif
			else
				call hashtable_saveInt(ErrorHandling_HT, ErrorHandling_PRIMARY_ERROR_KEY, hash, real_toInt(GameTimer_currentTime))
				call Log_error("Message: " + msg + "")
			endif
		endif
		call I2S(1 / 0)
	endif
endfunction

function initCompiletimeState_0 takes nothing returns nothing
	call InitHashtable()
	call InitHashtable()
	set hashtable_compiletime_189 = InitHashtable()
	set hashtable_compiletime = InitHashtable()
	call SaveInteger(hashtable_compiletime, 1, -1663695754, 13)
	call SaveInteger(hashtable_compiletime, 1, -854572045, 3)
	call SaveInteger(hashtable_compiletime, 1, 349230650, 7)
	call SaveInteger(hashtable_compiletime, 1, -1474492777, 9)
	call SaveInteger(hashtable_compiletime, 1, 789744696, 15)
	call SaveInteger(hashtable_compiletime, 1, -1559655710, 12)
	call SaveInteger(hashtable_compiletime, 1, -943650483, 5)
	call SaveInteger(hashtable_compiletime, 1, -1587459251, 10)
	call SaveInteger(hashtable_compiletime, 1, -1894922563, 8)
	call SaveInteger(hashtable_compiletime, 1, -1676716706, 11)
	call SaveInteger(hashtable_compiletime, 1, 597637742, 14)
	call SaveInteger(hashtable_compiletime, 1, -680649701, 4)
	call SaveInteger(hashtable_compiletime, 1, -671760605, 6)
	call SaveInteger(hashtable_compiletime, 1, -242600650, 0)
	call SaveInteger(hashtable_compiletime, 1, -647782241, 2)
	call SaveInteger(hashtable_compiletime, 1, 1132341824, 1)
	call SaveStr(hashtable_compiletime, 2, 0, "")
endfunction

function initCompiletimeState takes nothing returns nothing
	call ExecuteFunc("initCompiletimeState_0")
endfunction

function addEffect takes string path, real pos_x, real pos_y returns effect
	return AddSpecialEffect(path, pos_x, pos_y)
endfunction

function Table_loadInt takes integer this_1, integer parentKey returns integer
	return hashtable_loadInt(Table_ht, this_1, parentKey)
endfunction

function dispatch_Table_Table_Table_loadInt takes integer this_1, integer parentKey returns integer
	local integer Table_Table_loadInt_result = Table_loadInt(this_1, parentKey)
	return Table_Table_loadInt_result
endfunction

function timer_getHandleId takes timer this_1 returns integer
	return GetHandleId(this_1)
endfunction

function timer_getData takes timer this_1 returns integer
	return dispatch_Table_Table_Table_loadInt(TimerUtils_timerData, timer_getHandleId(this_1))
endfunction

function timer_pause takes timer this_1 returns nothing
	call PauseTimer(this_1)
endfunction

function Table_saveInt takes integer this_1, integer parentKey, integer value returns nothing
	call hashtable_saveInt(Table_ht, this_1, parentKey, value)
endfunction

function dispatch_Table_Table_Table_saveInt takes integer this_1, integer parentKey, integer value returns nothing
	call Table_saveInt(this_1, parentKey, value)
endfunction

function timer_setData takes timer this_1, integer data returns nothing
	call dispatch_Table_Table_Table_saveInt(TimerUtils_timerData, timer_getHandleId(this_1), data)
endfunction

function timer_release takes timer this_1 returns nothing
	if this_1 == null then
		call error("Trying to release a null timer")
		return
	endif
	if timer_getData(this_1) == TimerUtils_HELD then
		call error("ReleaseTimer: Double free!")
		return
	endif
	call timer_setData(this_1, TimerUtils_HELD)
	call timer_pause(this_1)
	set TimerUtils_freeTimers[TimerUtils_freeTimersCount] = this_1
	set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount + 1
endfunction

function CallbackPeriodic_onDestroy takes integer this_1 returns nothing
	set ClosureTimers_ItimerShuliang1 = ClosureTimers_ItimerShuliang1 - 1
	call timer_release(CallbackPeriodic_t[this_1])
endfunction

function dealloc_CallbackPeriodic takes integer obj returns nothing
	if CallbackPeriodic_typeId[obj] == 0 then
		call error("Double free: object of type CallbackPeriodic")
	else
		set CallbackPeriodic_nextFree[CallbackPeriodic_firstFree] = obj
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree + 1
		set CallbackPeriodic_typeId[obj] = 0
	endif
endfunction

function destroyCallbackPeriodic takes integer this_1 returns nothing
	call CallbackPeriodic_onDestroy(this_1)
	call dealloc_CallbackPeriodic(this_1)
endfunction

function dispatch_CallbackPeriodic_destroyCallbackPeriodic takes integer this_1 returns nothing
	call destroyCallbackPeriodic(this_1)
endfunction

function effect_destr takes effect this_1 returns nothing
	call DestroyEffect(this_1)
endfunction

function unit_getX takes unit this_1 returns real
	return GetUnitX(this_1)
endfunction

function unit_getY takes unit this_1 returns real
	return GetUnitY(this_1)
endfunction

function unit_getPos takes unit this_1 returns real
	set unit_getPos_return_x = unit_getX(this_1)
	set unit_getPos_return_y = unit_getY(this_1)
	return unit_getPos_return_x
endfunction

function unit_setPos takes unit this_1, real pos_x, real pos_y returns nothing
	call SetUnitPosition(this_1, pos_x, pos_y)
endfunction

function angle_toVec takes real this_radians, real len returns real
	set angle_toVec_return_x = Cos(this_radians) * len
	set angle_toVec_return_y = Sin(this_radians) * len
	return angle_toVec_return_x
endfunction

function vec2_op_plus takes real this_x, real this_y, real v_x, real v_y returns real
	set vec2_op_plus_return_x = this_x + v_x
	set vec2_op_plus_return_y = this_y + v_y
	return vec2_op_plus_return_x
endfunction

function vec2_polarOffset takes real this_x, real this_y, real ang_radians_1, real dist returns real
	set vec2_polarOffset_return_x = vec2_op_plus(this_x, this_y, angle_toVec(ang_radians_1, dist), angle_toVec_return_y)
	set vec2_polarOffset_return_y = vec2_op_plus_return_y
	return vec2_polarOffset_return_x
endfunction

function call_doPeriodically_chongfeng takes integer this_1, integer cb returns nothing
	local real tuple_temp = unit_getPos(this[this_1])
	local real tuple_temp_1 = unit_getPos_return_y
	local real pos1_x = tuple_temp
	local real pos1_y = tuple_temp_1
	local real tuple_temp_2 = vec2_polarOffset(pos1_x, pos1_y, ang_radians[this_1], 50.)
	local real tuple_temp_3 = vec2_polarOffset_return_y
	local real pos2_x = tuple_temp_2
	local real pos2_y = tuple_temp_3
	local effect eff
	call unit_setPos(this[this_1], pos2_x, pos2_y)
	set eff = addEffect("Abilities\\Spells\\Human\\Thunderclap\\ThunderClapCaster.mdl", pos2_x, pos2_y)
	call effect_destr(eff)
	set count[this_1] = count[this_1] + 1
	if count[this_1] >= 40 then
		call dispatch_CallbackPeriodic_destroyCallbackPeriodic(cb)
	endif
	set eff = null
endfunction

function dispatch_CallbackPeriodic_ClosureTimers_CallbackPeriodic_call takes integer this_1, integer cb returns nothing
	call call_doPeriodically_chongfeng(this_1, cb)
endfunction

function CallbackPeriodic_staticCallback takes nothing returns nothing
	local integer cb = timer_getData(GetExpiredTimer())
	call dispatch_CallbackPeriodic_ClosureTimers_CallbackPeriodic_call(cb, cb)
endfunction

function EventData_getAttackerUnit takes nothing returns unit
	return GetAttacker()
endfunction

function EventData_getTriggerUnit takes nothing returns unit
	return GetTriggerUnit()
endfunction

function print takes string msg returns nothing
	call DisplayTimedTextToPlayer(Player_localPlayer, 0., 0., Printing_DEBUG_MSG_DURATION, msg)
endfunction

function real_toString takes real this_1 returns string
	return R2S(this_1)
endfunction

function unit_getState takes unit this_1, unitstate state returns real
	return GetUnitState(this_1, state)
endfunction

function unit_getHP takes unit this_1 returns real
	return unit_getState(this_1, UNIT_STATE_LIFE)
endfunction

function unit_getName takes unit this_1 returns string
	return GetUnitName(this_1)
endfunction

function onEvent_add_MapInit takes integer this_1 returns nothing
	local unit u1 = EventData_getTriggerUnit()
	local unit u2 = EventData_getAttackerUnit()
	call print("无语，" + unit_getName(u2) + "居然打了" + unit_getName(u1))
	call print("只剩下" + real_toString(unit_getHP(u1)) + "血了")
	set u1 = null
	set u2 = null
endfunction

function EventData_getSpellAbilityId takes nothing returns integer
	return GetSpellAbilityId()
endfunction

function EventData_getAbilityTargetPos takes nothing returns real
	set EventData_getAbilityTargetPos_return_x = GetSpellTargetX()
	set EventData_getAbilityTargetPos_return_y = GetSpellTargetY()
	return EventData_getAbilityTargetPos_return_x
endfunction

function EventData_getSpellTargetPos takes nothing returns real
	set EventData_getSpellTargetPos_return_x = EventData_getAbilityTargetPos()
	set EventData_getSpellTargetPos_return_y = EventData_getAbilityTargetPos_return_y
	return EventData_getSpellTargetPos_return_x
endfunction

function alloc_CallbackPeriodic_doPeriodically_chongfeng takes nothing returns integer
	local integer this_1
	if CallbackPeriodic_firstFree == 0 then
		if CallbackPeriodic_maxIndex < 32768 then
			set CallbackPeriodic_maxIndex = CallbackPeriodic_maxIndex + 1
			set this_1 = CallbackPeriodic_maxIndex
			set CallbackPeriodic_typeId[this_1] = 4
		else
			call error("Out of memory: Could not create CallbackPeriodic_doPeriodically_chongfeng.")
			set this_1 = 0
		endif
	else
		set CallbackPeriodic_firstFree = CallbackPeriodic_firstFree - 1
		set this_1 = CallbackPeriodic_nextFree[CallbackPeriodic_firstFree]
		set CallbackPeriodic_typeId[this_1] = 4
	endif
	return this_1
endfunction

function CallbackPeriodic_init takes integer this_1 returns nothing
endfunction

function construct_CallbackPeriodic takes integer this_1 returns nothing
	call CallbackPeriodic_init(this_1)
endfunction

function getTimer takes nothing returns timer
	local timer receiver
	if TimerUtils_freeTimersCount > 0 then
		set TimerUtils_freeTimersCount = TimerUtils_freeTimersCount - 1
		call timer_setData(TimerUtils_freeTimers[TimerUtils_freeTimersCount], 0)
		set receiver = null
		return TimerUtils_freeTimers[TimerUtils_freeTimersCount]
	else
		set receiver = CreateTimer()
		call timer_setData(receiver, 0)
		set getTimertempReturn = receiver
		set receiver = null
		return getTimertempReturn
	endif
endfunction

function timer_startPeriodic takes timer this_1, real time, code timerCallBack returns nothing
	call TimerStart(this_1, time, true, timerCallBack)
endfunction

function CallbackPeriodic_start takes integer this_1, timer whichTimer, real time returns nothing
	local timer receiver
	local timer receiver_1
	set ClosureTimers_ItimerShuliang1 = ClosureTimers_ItimerShuliang1 + 1
	if ClosureTimers_ItimerShuliang1 == 6000 then
	endif
	set receiver = whichTimer
	call timer_setData(receiver, this_1)
	set receiver_1 = receiver
	call timer_startPeriodic(receiver_1, time, ref_function_CallbackPeriodic_staticCallback)
	set CallbackPeriodic_t[this_1] = receiver_1
	set receiver = null
	set receiver_1 = null
endfunction

function dispatch_CallbackPeriodic_ClosureTimers_CallbackPeriodic_start takes integer this_1, timer whichTimer, real time returns nothing
	call CallbackPeriodic_start(this_1, whichTimer, time)
endfunction

function timer_doPeriodically takes timer this_1, real time, integer cb returns integer
	call dispatch_CallbackPeriodic_ClosureTimers_CallbackPeriodic_start(cb, this_1, time)
	return cb
endfunction

function doPeriodically takes real time, integer cb returns integer
	return timer_doPeriodically(getTimer(), time, cb)
endfunction

function real_asAngleRadians takes real this_1 returns real
	set real_asAngleRadians_return_radians = this_1
	return real_asAngleRadians_return_radians
endfunction

function vec2_angleTo takes real this_x, real this_y, real v_x, real v_y returns real
	set vec2_angleTo_return_radians = real_asAngleRadians(Atan2(v_y - this_y, v_x - this_x))
	return vec2_angleTo_return_radians
endfunction

function unit_chongfeng takes unit this_1, real mubiao_x, real mubiao_y returns nothing
	local real tuple_temp = unit_getPos(this_1)
	local real tuple_temp_1 = unit_getPos_return_y
	local real pos_x = tuple_temp
	local real pos_y = tuple_temp_1
	local real tuple_temp_2 = vec2_angleTo(pos_x, pos_y, mubiao_x, mubiao_y)
	local real ang_radians_1 = tuple_temp_2
	local integer count_1 = 0
	local integer clVar = alloc_CallbackPeriodic_doPeriodically_chongfeng()
	local real tuple_temp_3
	call construct_CallbackPeriodic(clVar)
	set this[clVar] = this_1
	set tuple_temp_3 = ang_radians_1
	set ang_radians[clVar] = tuple_temp_3
	set count[clVar] = count_1
	call doPeriodically(0.03, clVar)
endfunction

function onEvent_add_MapInit_362 takes integer this_1 returns nothing
	local unit u = EventData_getTriggerUnit()
	local real tuple_temp = EventData_getSpellTargetPos()
	local real tuple_temp_1 = EventData_getSpellTargetPos_return_y
	local real pos_x = tuple_temp
	local real pos_y = tuple_temp_1
	if EventData_getSpellAbilityId() == 1095262842 then
		call unit_chongfeng(u, pos_x, pos_y)
	endif
	set u = null
endfunction

function dispatch_EventListener_ClosureEvents_EventListener_onEvent takes integer this_1 returns nothing
	if EventListener_typeId[this_1] <= 12 then
		call onEvent_add_MapInit(this_1)
	else
		call onEvent_add_MapInit_362(this_1)
	endif
endfunction

function handle_getHandleId takes handle this_1 returns integer
	return GetHandleId(this_1)
endfunction

function eventid_isPlayerunitEvent takes eventid this_1 returns boolean
	local integer eventId = handle_getHandleId(this_1)
	return (eventId >= 18 and eventId <= 51) or (eventId >= 269 and eventId <= 277) or eventId == 315 or eventId == 308
endfunction

function int_toString takes integer this_1 returns string
	return I2S(this_1)
endfunction

function trigger_addAction takes trigger this_1, code actionFunc returns triggeraction
	return TriggerAddAction(this_1, actionFunc)
endfunction

function trigger_addCondition takes trigger this_1, boolexpr condition returns triggercondition
	return TriggerAddCondition(this_1, condition)
endfunction

function trigger_registerPlayerUnitEvent takes trigger this_1, player whichPlayer, playerunitevent whichPlayerUnitEvent, boolexpr filter returns event
	return TriggerRegisterPlayerUnitEvent(this_1, whichPlayer, whichPlayerUnitEvent, filter)
endfunction

function registerPlayerUnitEvent_370 takes playerunitevent p, code filter, code condition, code action returns nothing
	local integer hid = handle_getHandleId(p)
	local integer k
	local filterfunc cond_result
	local trigger temp
	local player temp_1
	local playerunitevent temp_2
	if RegisterEvents_t[hid] == null then
		set RegisterEvents_t[hid] = CreateTrigger()
		set k = bj_MAX_PLAYER_SLOTS - 1
		loop
			exitwhen k < 0
			set temp = RegisterEvents_t[hid]
			set temp_1 = Player_players[k]
			set temp_2 = p
			if filter != null then
				set cond_result = Filter(filter)
			else
				set cond_result = null
			endif
			call trigger_registerPlayerUnitEvent(temp, temp_1, temp_2, cond_result)
			set k = k - 1
		endloop
	endif
	if condition != null then
		call trigger_addCondition(RegisterEvents_t[hid], Filter(condition))
	endif
	if action != null then
		call trigger_addAction(RegisterEvents_t[hid], action)
	endif
	set cond_result = null
	set temp = null
	set temp_1 = null
	set temp_2 = null
endfunction

function registerPlayerUnitEvent takes playerunitevent p, code c returns nothing
	call registerPlayerUnitEvent_370(p, null, c, null)
endfunction

function registerEventId takes eventid evnt returns integer
	local integer eventId = handle_getHandleId(evnt)
	set ClosureEvents_eventTypeCounter = ClosureEvents_eventTypeCounter + 1
	set ClosureEvents_eventidToIndex[eventId] = ClosureEvents_eventTypeCounter
	if eventid_isPlayerunitEvent(evnt) then
		call registerPlayerUnitEvent(ConvertPlayerUnitEvent(eventId), ref_function_EventListener_generalEventCallback)
	elseif evnt != EVENT_UNIT_DAMAGED and evnt != EVENT_PLAYER_LEAVE and evnt != ClosureEvents_EVENT_PLAYER_CHAT_FILTER then
		call error("registering handleid: " + int_toString(eventId) + " non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.")
	endif
	return ClosureEvents_eventTypeCounter
endfunction

function eventid_toIntId takes eventid this_1 returns integer
	local integer id = ClosureEvents_eventidToIndex[handle_getHandleId(this_1)]
	if id == 0 then
		set id = registerEventId(this_1)
	endif
	return id
endfunction

function EventListener_generalEventCallback takes nothing returns nothing
	local integer id = eventid_toIntId(GetTriggerEventId())
	local integer listener
	local integer nextListener
	if EventListener_generalListenersFirsts[id] != 0 then
		set listener = EventListener_generalListenersFirsts[id]
		loop
			exitwhen  not (listener != 0)
			set nextListener = EventListener_next[listener]
			call dispatch_EventListener_ClosureEvents_EventListener_onEvent(listener)
			set listener = nextListener
		endloop
	endif
endfunction

function Trig_______uActions takes nothing returns nothing
	call BJDebugMsg("TRIGSTR_007")
endfunction

function code__ClosureEvents takes nothing returns nothing
	call EventListener_generalEventCallback()
endfunction

function HashMap_get takes integer this_1, integer key returns integer
	return dispatch_Table_Table_Table_loadInt(this_1, key)
endfunction

function dispatch_HashMap_HashMap_HashMap_get takes integer this_1, integer key returns integer
	local integer HashMap_HashMap_get_result = HashMap_get(this_1, key)
	return HashMap_HashMap_get_result
endfunction

function hashtable_loadTriggerHandle takes hashtable this_1, integer parentKey, integer childKey returns trigger
	return LoadTriggerHandle(this_1, parentKey, childKey)
endfunction

function Table_loadTrigger takes integer this_1, integer parentKey returns trigger
	return hashtable_loadTriggerHandle(Table_ht, this_1, parentKey)
endfunction

function dispatch_Table_Table_Table_loadTrigger takes integer this_1, integer parentKey returns trigger
	local trigger Table_Table_loadTrigger_result = Table_loadTrigger(this_1, parentKey)
	set dispatch_Table_Table_Table_loadTriggertempReturn = Table_Table_loadTrigger_result
	set Table_Table_loadTrigger_result = null
	return dispatch_Table_Table_Table_loadTriggertempReturn
endfunction

function hashtable_saveFogStateHandle takes hashtable this_1, integer parentKey, integer childKey, fogstate value returns nothing
	call SaveFogStateHandle(this_1, parentKey, childKey, value)
endfunction

function Table_saveFogState takes integer this_1, integer parentKey, fogstate value returns nothing
	call hashtable_saveFogStateHandle(Table_ht, this_1, parentKey, value)
endfunction

function dispatch_Table_Table_Table_saveFogState takes integer this_1, integer parentKey, fogstate value returns nothing
	call Table_saveFogState(this_1, parentKey, value)
endfunction

function triggerFromIndex takes integer index returns trigger
	call dispatch_Table_Table_Table_saveFogState(TypeCasting_typecastdata, 0, ConvertFogState(index))
	return dispatch_Table_Table_Table_loadTrigger(TypeCasting_typecastdata, 0)
endfunction

function trigger_evaluate takes trigger this_1 returns boolean
	return TriggerEvaluate(this_1)
endfunction

function code__registerPlayerUnitEvent_RegisterEvents takes nothing returns boolean
	return trigger_evaluate(triggerFromIndex(dispatch_HashMap_HashMap_HashMap_get(RegisterEvents_onCastMap, GetSpellAbilityId())))
endfunction

function Table_hasInt takes integer this_1, integer parentKey returns boolean
	return hashtable_hasInt(Table_ht, this_1, parentKey)
endfunction

function dispatch_Table_Table_Table_hasInt takes integer this_1, integer parentKey returns boolean
	local boolean Table_Table_hasInt_result = Table_hasInt(this_1, parentKey)
	return Table_Table_hasInt_result
endfunction

function HashMap_has takes integer this_1, integer key returns boolean
	return dispatch_Table_Table_Table_hasInt(this_1, key)
endfunction

function dispatch_HashMap_HashMap_HashMap_has takes integer this_1, integer key returns boolean
	local boolean HashMap_HashMap_has_result = HashMap_has(this_1, key)
	return HashMap_HashMap_has_result
endfunction

function dispatch_OnCast_ClosureEvents_OnCast_fireEx takes integer this_1, integer id returns nothing
endfunction

function OnCast_fire takes integer this_1, unit caster returns nothing
	call dispatch_OnCast_ClosureEvents_OnCast_fireEx(this_1, GetSpellAbilityId())
endfunction

function dispatch_OnPointCast_ClosureEvents_OnPointCast_fireEx takes integer this_1, unit caster, real target_x, real target_y returns nothing
endfunction

function OnPointCast_fire takes integer this_1, unit caster returns nothing
	call dispatch_OnPointCast_ClosureEvents_OnPointCast_fireEx(this_1, caster, EventData_getSpellTargetPos(), EventData_getSpellTargetPos_return_y)
endfunction

function dispatch_OnUnitCast_ClosureEvents_OnUnitCast_fireEx takes integer this_1, unit caster, unit target returns nothing
endfunction

function OnUnitCast_fire takes integer this_1, unit caster returns nothing
	call dispatch_OnUnitCast_ClosureEvents_OnUnitCast_fireEx(this_1, caster, GetSpellTargetUnit())
endfunction

function dispatch_OnCastListener_ClosureEvents_OnCastListener_fire takes integer this_1, unit caster returns nothing
	if OnCastListener_typeId[this_1] <= 22 then
		if OnCastListener_typeId[this_1] <= 21 then
			call OnCast_fire(this_1, caster)
		else
			call OnPointCast_fire(this_1, caster)
		endif
	else
		call OnUnitCast_fire(this_1, caster)
	endif
endfunction

function unitToIndex takes unit object returns integer
	return handle_getHandleId(object)
endfunction

function EventListener_onSpellEffect takes nothing returns nothing
	local unit trigUnit = GetTriggerUnit()
	local integer abilId = GetSpellAbilityId()
	local integer listener
	local integer nextListener
	local integer listener_1
	local integer nextListener_1
	if dispatch_HashMap_HashMap_HashMap_has(EventListener_castMapCasters, unitToIndex(trigUnit)) then
		set listener = dispatch_HashMap_HashMap_HashMap_get(EventListener_castMapCasters, unitToIndex(trigUnit))
		loop
			exitwhen  not (listener != 0)
			set nextListener = OnCastListener_next[listener]
			if OnCastListener_abilId[listener] == -1 or OnCastListener_abilId[listener] == abilId then
				call dispatch_OnCastListener_ClosureEvents_OnCastListener_fire(listener, GetSpellAbilityUnit())
			endif
			set listener = nextListener
		endloop
	endif
	if dispatch_HashMap_HashMap_HashMap_has(EventListener_castMap, abilId) then
		set listener_1 = dispatch_HashMap_HashMap_HashMap_get(EventListener_castMap, abilId)
		loop
			exitwhen  not (listener_1 != 0)
			set nextListener_1 = OnCastListener_next[listener_1]
			if OnCastListener_eventUnit[listener_1] == null or OnCastListener_eventUnit[listener_1] == trigUnit then
				call dispatch_OnCastListener_ClosureEvents_OnCastListener_fire(listener_1, GetSpellAbilityUnit())
			endif
			set listener_1 = nextListener_1
		endloop
	endif
	set trigUnit = null
endfunction

function code__registerPlayerUnitEvent_nullTimer_ClosureEvents takes nothing returns nothing
	call EventListener_onSpellEffect()
endfunction

function code__startPeriodic_GameTimer takes nothing returns nothing
	set GameTimer_currentTime = GameTimer_currentTime + Basics_ANIMATION_PERIOD
endfunction

function call_doAfter_ClosureTimers takes integer this_1 returns nothing
	set ClosureTimers_x = ClosureTimers_x + 50
endfunction

function call_doAfter_ClosureTimers_252 takes integer this_1 returns nothing
	set ClosureTimers_x = ClosureTimers_x * 2
endfunction

function testFail takes string msg returns nothing
endfunction

function int_assertEquals takes integer this_1, integer expected returns nothing
	if this_1 != expected then
		call testFail("Expected <" + int_toString(expected) + ">, Actual <" + int_toString(this_1) + ">")
	endif
endfunction

function call_doAfter_ClosureTimers_253 takes integer this_1 returns nothing
	set ClosureTimers_x = ClosureTimers_x / 2
	call int_assertEquals(ClosureTimers_x, 250)
endfunction

function trigger_registerPlayerChatEvent takes trigger this_1, player whichPlayer, string chatMessageToDetect, boolean exactMatchOnly returns event
	return TriggerRegisterPlayerChatEvent(this_1, whichPlayer, chatMessageToDetect, exactMatchOnly)
endfunction

function trigger_registerPlayerEvent takes trigger this_1, player whichPlayer, playerevent whichPlayerEvent returns event
	return TriggerRegisterPlayerEvent(this_1, whichPlayer, whichPlayerEvent)
endfunction

function call_nullTimer_ClosureEvents takes integer this_1 returns nothing
	local integer i
	local integer temp
	local trigger receiver
	call trigger_addAction(ClosureEvents_unitTrig, ClosureEvents_cb3)
	call trigger_addAction(ClosureEvents_leaveTrig, ClosureEvents_cb3)
	call trigger_addAction(ClosureEvents_keyTrig, ClosureEvents_cb3)
	set i = 0
	set temp = bj_MAX_PLAYERS - 1
	loop
		exitwhen i > temp
		call trigger_registerPlayerEvent(ClosureEvents_leaveTrig, Player_players[i], EVENT_PLAYER_LEAVE)
		set receiver = ClosureEvents_keyTrig
		call trigger_registerPlayerChatEvent(receiver, Player_players[i], "", false)
		set i = i + 1
	endloop
	call registerPlayerUnitEvent_370(EVENT_PLAYER_UNIT_SPELL_EFFECT, null, ref_function_code__registerPlayerUnitEvent_nullTimer_ClosureEvents, null)
	set receiver = null
endfunction

function dispatch_CallbackSingle_ClosureTimers_CallbackSingle_call takes integer this_1 returns nothing
	if CallbackSingle_typeId[this_1] <= 7 then
		if CallbackSingle_typeId[this_1] <= 6 then
			call call_doAfter_ClosureTimers(this_1)
		else
			call call_doAfter_ClosureTimers_252(this_1)
		endif
	elseif CallbackSingle_typeId[this_1] <= 8 then
		call call_doAfter_ClosureTimers_253(this_1)
	else
		call call_nullTimer_ClosureEvents(this_1)
	endif
endfunction

function CallbackSingle_onDestroy takes integer this_1 returns nothing
	set ClosureTimers_ItimerShuliang = ClosureTimers_ItimerShuliang - 1
	call timer_release(CallbackSingle_t[this_1])
endfunction

function dealloc_CallbackSingle takes integer obj returns nothing
	if CallbackSingle_typeId[obj] == 0 then
		call error("Double free: object of type CallbackSingle")
	else
		set CallbackSingle_nextFree[CallbackSingle_firstFree] = obj
		set CallbackSingle_firstFree = CallbackSingle_firstFree + 1
		set CallbackSingle_typeId[obj] = 0
	endif
endfunction

function destroyCallbackSingle takes integer this_1 returns nothing
	call CallbackSingle_onDestroy(this_1)
	call dealloc_CallbackSingle(this_1)
endfunction

function dispatch_CallbackSingle_destroyCallbackSingle takes integer this_1 returns nothing
	call destroyCallbackSingle(this_1)
endfunction

function CallbackSingle_staticCallback takes nothing returns nothing
	local timer t = GetExpiredTimer()
	local integer cb = timer_getData(t)
	call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_call(cb)
	call dispatch_CallbackSingle_destroyCallbackSingle(cb)
	set t = null
endfunction

function code__start_CallbackSingle_ClosureTimers takes nothing returns nothing
	call CallbackSingle_staticCallback()
endfunction

function unit_hide takes unit this_1 returns nothing
	call ShowUnit(this_1, false)
endfunction

function init_Ability takes nothing returns boolean
	local unit receiver = CreateUnit(Basics_DUMMY_PLAYER, 1853057125, 0., 0., 0.)
	call unit_hide(receiver)
	set receiver = null
	return true
endfunction

function init_Angle takes nothing returns boolean
	return true
endfunction

function init_Basics takes nothing returns boolean
	set Basics_ANIMATION_PERIOD = 0.030
	set Basics_DUMMY_PLAYER = Player_players[PLAYER_NEUTRAL_PASSIVE]
	return true
endfunction

function initLbyte takes nothing returns nothing
	local integer i16 = 0
	local integer i256 = 0
	local integer i
	loop
		exitwhen  not (i256 < 256)
		set i = 0
		loop
			exitwhen  not (i < 16)
			set i256 = i256 + 1
			set i = i + 1
		endloop
		set i16 = i16 + 1
	endloop
endfunction

function initRbyte takes nothing returns nothing
	local integer i256 = 0
	local integer i16
	loop
		exitwhen  not (i256 < 256)
		set i16 = 0
		loop
			exitwhen  not (i16 < 16)
			set i256 = i256 + 1
			set i16 = i16 + 1
		endloop
	endloop
endfunction

function initShift takes nothing returns nothing
	local integer bit = 0
	local integer pow = 1
	loop
		exitwhen  not (bit <= 32)
		set pow = pow * 2
		set bit = bit + 1
	endloop
endfunction

function initBitwise takes nothing returns nothing
	call initLbyte()
	call initRbyte()
	call initShift()
endfunction

function init_BitwiseInit takes nothing returns boolean
	call initBitwise()
	return true
endfunction

function alloc_CallbackSingle_nullTimer_ClosureEvents takes nothing returns integer
	local integer this_1
	if CallbackSingle_firstFree == 0 then
		if CallbackSingle_maxIndex < 32768 then
			set CallbackSingle_maxIndex = CallbackSingle_maxIndex + 1
			set this_1 = CallbackSingle_maxIndex
			set CallbackSingle_typeId[this_1] = 9
		else
			call error("Out of memory: Could not create CallbackSingle_nullTimer_ClosureEvents.")
			set this_1 = 0
		endif
	else
		set CallbackSingle_firstFree = CallbackSingle_firstFree - 1
		set this_1 = CallbackSingle_nextFree[CallbackSingle_firstFree]
		set CallbackSingle_typeId[this_1] = 9
	endif
	return this_1
endfunction

function CallbackSingle_init takes integer this_1 returns nothing
endfunction

function construct_CallbackSingle takes integer this_1 returns nothing
	call CallbackSingle_init(this_1)
endfunction

function alloc_HashMap takes nothing returns integer
	local integer this_1
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_1 = Table_maxIndex
		else
			call error("Out of memory: Could not create HashMap.")
			set this_1 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_1 = Table_nextFree[Table_firstFree]
	endif
	return this_1
endfunction

function HashMap_init takes integer this_1 returns nothing
endfunction

function Table_init takes integer this_1 returns nothing
endfunction

function construct_Table takes integer this_1 returns nothing
	call Table_init(this_1)
endfunction

function construct_HashMap takes integer this_1 returns nothing
	call construct_Table(this_1)
	call HashMap_init(this_1)
endfunction

function new_HashMap takes nothing returns integer
	local integer this_1 = alloc_HashMap()
	call construct_HashMap(this_1)
	return this_1
endfunction

function timer_start takes timer this_1, real time, code timerCallBack returns nothing
	call TimerStart(this_1, time, false, timerCallBack)
endfunction

function CallbackSingle_start takes integer this_1, timer whichTimer, real time returns nothing
	local timer receiver
	local timer receiver_1
	set ClosureTimers_ItimerShuliang = ClosureTimers_ItimerShuliang + 1
	if ClosureTimers_ItimerShuliang == 6000 then
	endif
	set receiver = whichTimer
	call timer_setData(receiver, this_1)
	set receiver_1 = receiver
	call timer_start(receiver_1, time, ref_function_code__start_CallbackSingle_ClosureTimers)
	set CallbackSingle_t[this_1] = receiver_1
	set receiver = null
	set receiver_1 = null
endfunction

function dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start takes integer this_1, timer whichTimer, real time returns nothing
	call CallbackSingle_start(this_1, whichTimer, time)
endfunction

function timer_doAfter takes timer this_1, real timeToWait, integer cb returns integer
	call dispatch_CallbackSingle_ClosureTimers_CallbackSingle_start(cb, this_1, timeToWait)
	return cb
endfunction

function doAfter takes real timeToWait, integer cb returns integer
	return timer_doAfter(getTimer(), timeToWait, cb)
endfunction

function nullTimer takes integer cb returns integer
	return doAfter(0., cb)
endfunction

function init_ClosureEvents takes nothing returns boolean
	local integer clVar
	set ClosureEvents_EVENT_PLAYER_CHAT_FILTER = ConvertPlayerEvent(96)
	set EventListener_castMap = new_HashMap()
	set EventListener_castMapCasters = new_HashMap()
	set ClosureEvents_unitTrig = CreateTrigger()
	set ClosureEvents_leaveTrig = CreateTrigger()
	set ClosureEvents_keyTrig = CreateTrigger()
	set ClosureEvents_eventTypeCounter = 0
	set ClosureEvents_cb3 = ref_function_code__ClosureEvents
	set clVar = alloc_CallbackSingle_nullTimer_ClosureEvents()
	call construct_CallbackSingle(clVar)
	call nullTimer(clVar)
	return true
endfunction

function init_ClosureTimers takes nothing returns boolean
	set ClosureTimers_ItimerShuliang = 0
	set ClosureTimers_ItimerShuliang1 = 0
	set ClosureTimers_x = 200
	return true
endfunction

function init_Colors takes nothing returns boolean
	return true
endfunction

function init_Destructable takes nothing returns boolean
	return true
endfunction

function init_Effect takes nothing returns boolean
	call InitHashtable()
	return true
endfunction

function init_ErrorHandling takes nothing returns boolean
	set ErrorHandling_MUTE_ERROR_DURATION = 60
	set ErrorHandling_PRIMARY_ERROR_KEY = -1
	set ErrorHandling_HT = hashtable_compiletime_189
	set ErrorHandling_suppressErrorMessages = false
	return true
endfunction

function alloc_Table takes nothing returns integer
	local integer this_1
	if Table_firstFree == 0 then
		if Table_maxIndex < 32768 then
			set Table_maxIndex = Table_maxIndex + 1
			set this_1 = Table_maxIndex
		else
			call error("Out of memory: Could not create Table.")
			set this_1 = 0
		endif
	else
		set Table_firstFree = Table_firstFree - 1
		set this_1 = Table_nextFree[Table_firstFree]
	endif
	return this_1
endfunction

function new_Table takes nothing returns integer
	local integer this_1 = alloc_Table()
	call construct_Table(this_1)
	return this_1
endfunction

function init_EventHelper takes nothing returns boolean
	call new_HashMap()
	call new_HashMap()
	call new_Table()
	return true
endfunction

function init_Framehandle takes nothing returns boolean
	local real tuple_temp
	local real tuple_temp_1
	local real tuple_temp_2
	local real tuple_temp_3
	call DzGetGameUI()
	set tuple_temp = 0.4
	set tuple_temp_1 = 0.6
	set Framehandle_SCREEN_TOP_x = tuple_temp
	set Framehandle_SCREEN_TOP_y = tuple_temp_1
	set tuple_temp_2 = 0.4
	set tuple_temp_3 = 0.0
	set Framehandle_SCREEN_BOTTOM_x = tuple_temp_2
	set Framehandle_SCREEN_BOTTOM_y = tuple_temp_3
	return true
endfunction

function init_GameTimer takes nothing returns boolean
	local timer receiver = CreateTimer()
	call timer_start(receiver, 100000., null)
	call timer_startPeriodic(CreateTimer(), Basics_ANIMATION_PERIOD, ref_function_code__startPeriodic_GameTimer)
	set receiver = null
	return true
endfunction

function init_Group takes nothing returns boolean
	call CreateGroup()
	return true
endfunction

function init_HashList takes nothing returns boolean
	return true
endfunction

function initializeTable takes nothing returns nothing
	local integer i = 0
	loop
		exitwhen i > 15
		call dispatch_Table_Table_Table_saveInt(Integer_decs, StringHash(Integer_hexs[i]), i)
		set i = i + 1
	endloop
endfunction

function init_Integer takes nothing returns boolean
	set Integer_hexs[0] = "0"
	set Integer_hexs[1] = "1"
	set Integer_hexs[2] = "2"
	set Integer_hexs[3] = "3"
	set Integer_hexs[4] = "4"
	set Integer_hexs[5] = "5"
	set Integer_hexs[6] = "6"
	set Integer_hexs[7] = "7"
	set Integer_hexs[8] = "8"
	set Integer_hexs[9] = "9"
	set Integer_hexs[10] = "A"
	set Integer_hexs[11] = "B"
	set Integer_hexs[12] = "C"
	set Integer_hexs[13] = "D"
	set Integer_hexs[14] = "E"
	set Integer_hexs[15] = "F"
	set Integer_decs = new_Table()
	call initializeTable()
	return true
endfunction

function init_Lightning takes nothing returns boolean
	return true
endfunction

function init_MagicFunctions takes nothing returns boolean
	set MagicFunctions_compiletime = false
	return true
endfunction

function EventListener_add takes eventid eventId, integer listener returns integer
	set EventListener_eventId[listener] = eventid_toIntId(eventId)
	if EventListener_generalListenersFirsts[EventListener_eventId[listener]] != 0 then
		set EventListener_next[listener] = EventListener_generalListenersFirsts[EventListener_eventId[listener]]
	endif
	set EventListener_generalListenersFirsts[EventListener_eventId[listener]] = listener
	return listener
endfunction

function alloc_EventListener_add_MapInit takes nothing returns integer
	local integer this_1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_1 = EventListener_maxIndex
			set EventListener_typeId[this_1] = 12
		else
			call error("Out of memory: Could not create EventListener_add_MapInit.")
			set this_1 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_1 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_1] = 12
	endif
	return this_1
endfunction

function alloc_EventListener_add_MapInit_247 takes nothing returns integer
	local integer this_1
	if EventListener_firstFree == 0 then
		if EventListener_maxIndex < 32768 then
			set EventListener_maxIndex = EventListener_maxIndex + 1
			set this_1 = EventListener_maxIndex
			set EventListener_typeId[this_1] = 13
		else
			call error("Out of memory: Could not create EventListener_add_MapInit.")
			set this_1 = 0
		endif
	else
		set EventListener_firstFree = EventListener_firstFree - 1
		set this_1 = EventListener_nextFree[EventListener_firstFree]
		set EventListener_typeId[this_1] = 13
	endif
	return this_1
endfunction

function EventListener_init takes integer this_1 returns nothing
	set EventListener_eventId[this_1] = 0
	set EventListener_next[this_1] = 0
endfunction

function construct_EventListener takes integer this_1 returns nothing
	call EventListener_init(this_1)
endfunction

function init_MapInit takes nothing returns boolean
	local playerunitevent temp = EVENT_PLAYER_UNIT_ATTACKED
	local integer clVar = alloc_EventListener_add_MapInit()
	local integer clVar_1
	local playerunitevent temp_1
	call construct_EventListener(clVar)
	call EventListener_add(temp, clVar)
	set temp_1 = EVENT_PLAYER_UNIT_SPELL_CAST
	set clVar_1 = alloc_EventListener_add_MapInit_247()
	call construct_EventListener(clVar_1)
	call EventListener_add(temp_1, clVar_1)
	set temp = null
	set temp_1 = null
	return true
endfunction

function init_Maths takes nothing returns boolean
	return true
endfunction

function init_Matrices takes nothing returns boolean
	local real tuple_temp = 0.
	local real tuple_temp_1 = 0.
	local real tuple_temp_2 = 0.
	local real tuple_temp_3 = 0.
	local real tuple_temp_4 = 0.
	local real tuple_temp_5 = 0.
	local real tuple_temp_6 = 0.
	local real tuple_temp_7 = 0.
	local real tuple_temp_8 = 0.
	local real tuple_temp_9 = 0.
	local real tuple_temp_10 = 0.
	local real tuple_temp_11 = 0.
	local real tuple_temp_12 = 0.
	local real tuple_temp_13 = 0.
	local real tuple_temp_14 = 0.
	local real tuple_temp_15 = 0.
	set Matrices_ZERO44_m00 = tuple_temp
	set Matrices_ZERO44_m01 = tuple_temp_1
	set Matrices_ZERO44_m02 = tuple_temp_2
	set Matrices_ZERO44_m03 = tuple_temp_3
	set Matrices_ZERO44_m10 = tuple_temp_4
	set Matrices_ZERO44_m11 = tuple_temp_5
	set Matrices_ZERO44_m12 = tuple_temp_6
	set Matrices_ZERO44_m13 = tuple_temp_7
	set Matrices_ZERO44_m20 = tuple_temp_8
	set Matrices_ZERO44_m21 = tuple_temp_9
	set Matrices_ZERO44_m22 = tuple_temp_10
	set Matrices_ZERO44_m23 = tuple_temp_11
	set Matrices_ZERO44_m30 = tuple_temp_12
	set Matrices_ZERO44_m31 = tuple_temp_13
	set Matrices_ZERO44_m32 = tuple_temp_14
	set Matrices_ZERO44_m33 = tuple_temp_15
	return true
endfunction

function init_Orders takes nothing returns boolean
	return true
endfunction

function initPlayerArray takes nothing returns nothing
	local integer i = 0
	local integer temp = bj_MAX_PLAYER_SLOTS - 1
	loop
		exitwhen i > temp
		set Player_players[i] = Player(i)
		set i = i + 1
	endloop
endfunction

function init_Player takes nothing returns boolean
	set Player_localPlayer = GetLocalPlayer()
	call initPlayerArray()
	return true
endfunction

function init_Playercolor takes nothing returns boolean
	call ConvertPlayerColor(24)
	call ConvertPlayerColor(25)
	call ConvertPlayerColor(26)
	call ConvertPlayerColor(27)
	return true
endfunction

function init_Printing takes nothing returns boolean
	set Printing_DEBUG_LEVEL = 2
	set Printing_DEBUG_MSG_DURATION = 45.
	return true
endfunction

function init_Quaternion takes nothing returns boolean
	return true
endfunction

function init_Real takes nothing returns boolean
	return true
endfunction

function init_RegisterEvents takes nothing returns boolean
	set RegisterEvents_onCastMap = new_HashMap()
	call registerPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, ref_function_code__registerPlayerUnitEvent_RegisterEvents)
	return true
endfunction

function init_StdLibConfig takes nothing returns boolean
	set StdLibConfig_STD_WURST_DEBUG = true
	return true
endfunction

function string_length takes string this_1 returns integer
	return StringLength(this_1)
endfunction

function init_String takes nothing returns boolean
	set String_charset = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
	set String_numberset = "0123456789"
	call string_length(String_numberset)
	call string_length(String_charset)
	return true
endfunction

function init_Table takes nothing returns boolean
	set Table_ht = hashtable_compiletime
	return true
endfunction

function init_TimerUtils takes nothing returns boolean
	set TimerUtils_freeTimersCount = 0
	set TimerUtils_timerData = new_Table()
	set TimerUtils_HELD = 679645218
	call new_HashMap()
	return true
endfunction

function hashtable_saveString takes hashtable this_1, integer parentKey, integer childKey, string value returns nothing
	call SaveStr(this_1, parentKey, childKey, value)
endfunction

function Table_saveString takes integer this_1, integer parentKey, string value returns nothing
	call hashtable_saveString(Table_ht, this_1, parentKey, value)
endfunction

function dispatch_Table_Table_Table_saveString takes integer this_1, integer parentKey, string value returns nothing
	call Table_saveString(this_1, parentKey, value)
endfunction

function initTypecastData takes nothing returns nothing
	call dispatch_Table_Table_Table_saveString(TypeCasting_typecastdata, 0, "")
endfunction

function init_TypeCasting takes nothing returns boolean
	set TypeCasting_typecastdata = new_Table()
	call initTypecastData()
	return true
endfunction

function init_Vectors takes nothing returns boolean
	call Location(0., 0.)
	return true
endfunction

function init_WeatherEffects takes nothing returns boolean
	return true
endfunction

function init_YD_LuaEngine takes nothing returns boolean
	return true
endfunction

function init_YD_native takes nothing returns boolean
	call ConvertUnitState(16)
	call ConvertUnitState(17)
	call ConvertUnitState(18)
	call ConvertUnitState(19)
	call ConvertUnitState(20)
	call ConvertUnitState(21)
	call ConvertUnitState(22)
	call ConvertUnitState(32)
	call ConvertUnitState(33)
	call ConvertUnitState(34)
	call ConvertUnitState(35)
	call ConvertUnitState(36)
	call ConvertUnitState(37)
	call ConvertUnitState(38)
	call ConvertUnitState(40)
	call ConvertUnitState(39)
	call ConvertUnitState(41)
	call ConvertUnitState(86)
	call ConvertUnitState(87)
	call ConvertUnitState(88)
	call ConvertUnitState(48)
	call ConvertUnitState(49)
	call ConvertUnitState(50)
	call ConvertUnitState(51)
	call ConvertUnitState(52)
	call ConvertUnitState(53)
	call ConvertUnitState(54)
	call ConvertUnitState(55)
	call ConvertUnitState(56)
	call ConvertUnitState(57)
	call ConvertUnitState(64)
	call ConvertUnitState(65)
	call ConvertUnitState(66)
	call ConvertUnitState(67)
	call ConvertUnitState(68)
	call ConvertUnitState(69)
	call ConvertUnitState(70)
	call ConvertUnitState(71)
	call ConvertUnitState(89)
	call ConvertUnitState(80)
	call ConvertUnitState(81)
	call ConvertUnitState(82)
	call ConvertUnitState(83)
	call ConvertUnitState(84)
	call ConvertUnitState(1)
	call ConvertUnitState(3)
	call ConvertUnitState(85)
	call ConvertUnitState(96)
	call ConvertUnitState(97)
	return true
endfunction

function initGlobals takes nothing returns nothing
	set gg_trg_______u = null
	set CallbackSingle_firstFree = 0
	set CallbackSingle_maxIndex = 0
	set EventListener_firstFree = 0
	set EventListener_maxIndex = 0
	set CallbackPeriodic_firstFree = 0
	set CallbackPeriodic_maxIndex = 0
	set Table_firstFree = 0
	set Table_maxIndex = 0
	set ref_function_Trig_______uActions = function Trig_______uActions
	set ref_function_init_Real = function init_Real
	set ref_function_init_MagicFunctions = function init_MagicFunctions
	set ref_function_init_Table = function init_Table
	set ref_function_init_Integer = function init_Integer
	set ref_function_init_Angle = function init_Angle
	set ref_function_init_String = function init_String
	set ref_function_init_Vectors = function init_Vectors
	set ref_function_init_StdLibConfig = function init_StdLibConfig
	set ref_function_init_YD_native = function init_YD_native
	set ref_function_init_Destructable = function init_Destructable
	set ref_function_init_Orders = function init_Orders
	set ref_function_init_Player = function init_Player
	set ref_function_init_Basics = function init_Basics
	set ref_function_init_YD_LuaEngine = function init_YD_LuaEngine
	set ref_function_init_Ability = function init_Ability
	set ref_function_init_Maths = function init_Maths
	set ref_function_init_Printing = function init_Printing
	set ref_function_init_GameTimer = function init_GameTimer
	set ref_function_init_ErrorHandling = function init_ErrorHandling
	set ref_function_init_Matrices = function init_Matrices
	set ref_function_init_Quaternion = function init_Quaternion
	set ref_function_init_Colors = function init_Colors
	set ref_function_init_Effect = function init_Effect
	set ref_function_init_Framehandle = function init_Framehandle
	set ref_function_init_Group = function init_Group
	set ref_function_init_Lightning = function init_Lightning
	set ref_function_init_Playercolor = function init_Playercolor
	set ref_function_init_WeatherEffects = function init_WeatherEffects
	set ref_function_init_TypeCasting = function init_TypeCasting
	set ref_function_init_HashList = function init_HashList
	set ref_function_init_EventHelper = function init_EventHelper
	set ref_function_init_BitwiseInit = function init_BitwiseInit
	set ref_function_init_RegisterEvents = function init_RegisterEvents
	set ref_function_init_TimerUtils = function init_TimerUtils
	set ref_function_init_ClosureTimers = function init_ClosureTimers
	set ref_function_init_ClosureEvents = function init_ClosureEvents
	set ref_function_init_MapInit = function init_MapInit
	set ref_function_code__ClosureEvents = function code__ClosureEvents
	set ref_function_EventListener_generalEventCallback = function EventListener_generalEventCallback
	set ref_function_code__startPeriodic_GameTimer = function code__startPeriodic_GameTimer
	set ref_function_code__registerPlayerUnitEvent_RegisterEvents = function code__registerPlayerUnitEvent_RegisterEvents
	set ref_function_code__registerPlayerUnitEvent_nullTimer_ClosureEvents = function code__registerPlayerUnitEvent_nullTimer_ClosureEvents
	set ref_function_CallbackPeriodic_staticCallback = function CallbackPeriodic_staticCallback
	set ref_function_code__start_CallbackSingle_ClosureTimers = function code__start_CallbackSingle_ClosureTimers
endfunction

function main takes nothing returns nothing
	local trigger initTrig
	call initGlobals()
	call initCompiletimeState()
	call SetCameraBounds(( - 3328.000000) + GetCameraMargin(CAMERA_MARGIN_LEFT), ( - 3584.000000) + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 3328.000000 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 3072.000000 - GetCameraMargin(CAMERA_MARGIN_TOP), ( - 3328.000000) + GetCameraMargin(CAMERA_MARGIN_LEFT), 3072.000000 - GetCameraMargin(CAMERA_MARGIN_TOP), 3328.000000 - GetCameraMargin(CAMERA_MARGIN_RIGHT), ( - 3584.000000) + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
	call SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
	call NewSoundEnvironment("Default")
	call SetAmbientDaySound("LordaeronSummerDay")
	call SetAmbientNightSound("LordaeronSummerNight")
	call SetMapMusic("Music", true, 0)
	call InitSounds()
	call InitRandomGroups()
	call CreateRegions()
	call CreateCameras()
	call CreateDestructables()
	call CreateItems()
	call CreateUnits()
	call InitBlizzard()
	call ExecuteFunc("YDTriggerSaveLoadSystem__Init")
	call InitGlobals()
	call InitCustomTriggers()
	call RunInitializationTriggers()
	set initTrig = CreateTrigger()
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Real))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Real.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MagicFunctions))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package MagicFunctions.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Table))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Table.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Integer))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Integer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Angle))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Angle.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_String))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package String.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Vectors))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Vectors.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_StdLibConfig))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package StdLibConfig.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_YD_native))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package YD_native.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Destructable))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Destructable.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Orders))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Orders.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Player))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Player.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Basics))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Basics.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_YD_LuaEngine))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package YD_LuaEngine.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Ability))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Ability.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Maths))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Maths.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Printing))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Printing.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_GameTimer))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package GameTimer.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ErrorHandling))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package ErrorHandling.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Matrices))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Matrices.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Quaternion))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Quaternion.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Colors))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Colors.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Effect))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Effect.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Framehandle))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Framehandle.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Group))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Group.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Lightning))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Lightning.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_Playercolor))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package Playercolor.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_WeatherEffects))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package WeatherEffects.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TypeCasting))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package TypeCasting.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_HashList))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package HashList.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_EventHelper))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package EventHelper.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_BitwiseInit))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package BitwiseInit.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_RegisterEvents))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package RegisterEvents.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_TimerUtils))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package TimerUtils.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ClosureTimers))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package ClosureTimers.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_ClosureEvents))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package ClosureEvents.")
	endif
	call TriggerClearConditions(initTrig)
	call TriggerAddCondition(initTrig, Condition(ref_function_init_MapInit))
	if  not TriggerEvaluate(initTrig) then
		call error("Could not initialize package MapInit.")
	endif
	call TriggerClearConditions(initTrig)
	call DestroyTrigger(initTrig)
	set initTrig = null
endfunction

function InitAllyPriorities takes nothing returns nothing
	call SetStartLocPrioCount(0, 1)
	call SetStartLocPrio(0, 0, 1, MAP_LOC_PRIO_HIGH)
	call SetStartLocPrioCount(1, 1)
	call SetStartLocPrio(1, 0, 0, MAP_LOC_PRIO_HIGH)
endfunction

function InitCustomPlayerSlots takes nothing returns nothing
	call SetPlayerStartLocation(Player(0), 0)
	call ForcePlayerStartLocation(Player(0), 0)
	call SetPlayerColor(Player(0), ConvertPlayerColor(0))
	call SetPlayerRacePreference(Player(0), RACE_PREF_HUMAN)
	call SetPlayerRaceSelectable(Player(0), false)
	call SetPlayerController(Player(0), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(1), 1)
	call ForcePlayerStartLocation(Player(1), 1)
	call SetPlayerColor(Player(1), ConvertPlayerColor(1))
	call SetPlayerRacePreference(Player(1), RACE_PREF_ORC)
	call SetPlayerRaceSelectable(Player(1), false)
	call SetPlayerController(Player(1), MAP_CONTROL_USER)
	call SetPlayerStartLocation(Player(2), 2)
	call ForcePlayerStartLocation(Player(2), 2)
	call SetPlayerColor(Player(2), ConvertPlayerColor(2))
	call SetPlayerRacePreference(Player(2), RACE_PREF_UNDEAD)
	call SetPlayerRaceSelectable(Player(2), false)
	call SetPlayerController(Player(2), MAP_CONTROL_COMPUTER)
	call SetPlayerStartLocation(Player(3), 3)
	call ForcePlayerStartLocation(Player(3), 3)
	call SetPlayerColor(Player(3), ConvertPlayerColor(3))
	call SetPlayerRacePreference(Player(3), RACE_PREF_NIGHTELF)
	call SetPlayerRaceSelectable(Player(3), false)
	call SetPlayerController(Player(3), MAP_CONTROL_COMPUTER)
endfunction

function InitCustomTeams takes nothing returns nothing
	call SetPlayerTeam(Player(0), 0)
	call SetPlayerTeam(Player(1), 0)
	call SetPlayerTeam(Player(2), 0)
	call SetPlayerAllianceStateAllyBJ(Player(0), Player(1), true)
	call SetPlayerAllianceStateVisionBJ(Player(0), Player(1), true)
	call SetPlayerAllianceStateAllyBJ(Player(0), Player(2), true)
	call SetPlayerAllianceStateVisionBJ(Player(0), Player(2), true)
	call SetPlayerAllianceStateAllyBJ(Player(1), Player(0), true)
	call SetPlayerAllianceStateVisionBJ(Player(1), Player(0), true)
	call SetPlayerAllianceStateAllyBJ(Player(1), Player(2), true)
	call SetPlayerAllianceStateVisionBJ(Player(1), Player(2), true)
	call SetPlayerAllianceStateAllyBJ(Player(2), Player(0), true)
	call SetPlayerAllianceStateVisionBJ(Player(2), Player(0), true)
	call SetPlayerAllianceStateAllyBJ(Player(2), Player(1), true)
	call SetPlayerAllianceStateVisionBJ(Player(2), Player(1), true)
	call SetPlayerTeam(Player(3), 1)
endfunction

function config takes nothing returns nothing
	call SetMapName("TRIGSTR_001")
	call SetMapDescription("TRIGSTR_003")
	call SetPlayers(4)
	call SetTeams(4)
	call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
	call DefineStartLocation(3, 1408.000000,  - 1280.000000)
	call DefineStartLocation(2, 64.000000,  - 1216.000000)
	call DefineStartLocation(1, 320.000000,  - 192.000000)
	call DefineStartLocation(0,  - 704.000000,  - 128.000000)
	call InitCustomPlayerSlots()
	call InitCustomTeams()
	call InitAllyPriorities()
endfunction

