package Image
import NoWurst
import public Colors
import Vectors
import ErrorHandling
import Player
import Annotations

public enum Layer
	L1
	L3
	L2
	L4

/** ImageLayer influences the order in which the images are drawn above one another:
L1 ("Selection") is drawn above all other ImageLayers.
L2 ("Indicator") is drawn above ImageLayer 4, but below 1 and 3.
L3 ("Occlusion Mask") is drawn above ImageLayer 4 and 2 and below ImageLayer 1.
L4 ("Ubersplat") is drawn below every other layer. Images of this layer are additionally affected by time of day and the fog of war (only for tinting).
Multiple images with the same layer are drawn in their order of creation - first image below all others, last image above all others.*/
public enum ImageLayer
	L1
	L3
	L2
	L4

/**在目标位置创建图像，图像必须是具有透明边框的blp.设置永久渲染才会显示图像*/
public function createImage(string path, vec2 pos, real sizeX, real sizeY) returns image
	return CreateImage(path, sizeX, sizeY, 0, pos.x, pos.y, 0, sizeX / 2, sizeY / 2, 0, 1)

@deprecated("use ImageLayer instead of Layer.")
public function createImage(string path, vec2 pos, real sizeX, real sizeY, Layer layer) returns image
	return CreateImage(path, sizeX, sizeY, 0, pos.x, pos.y, 0, sizeX / 2, sizeY / 2, 0, layer castTo int + 1)

/**在目标位置创建图像，并设置层级.图像必须是具有透明边框的blp。设置永久渲染才会显示图像
层级定哪个图像与另一图像重叠：层级1始终位于顶部，层级4始终位于背景中。使用枚举ImageLayer.L${x}*/
public function createImage(string path, vec2 pos, real sizeX, real sizeY, ImageLayer layer) returns image
	return CreateImage(path, sizeX, sizeY, 0, pos.x, pos.y, 0, sizeX / 2, sizeY / 2, 0, layer castTo int + 1)

/** 永久渲染图像 */
public function image.show()
	SetImageRenderAlways(this, true)

/**隐藏图像*/
public function image.hide()
	SetImageRenderAlways(this, false)

/** 对指定玩家显示图像  */
public function image.showForPlayer(player p)
	if localPlayer == p
		SetImageRenderAlways(this, true)

/** 对指定玩家隐藏图像 */
public function image.hideForPlayer(player p)
	if localPlayer == p
		SetImageRenderAlways(this, false)

/** 设置图像Vec2位置 */
public function image.setPos(vec2 pos)
	SetImagePosition(this, pos.x, pos.y, 0)

/** 设置图像Vec3位置 */
public function image.setPos(vec3 pos)
	SetImagePosition(this, pos.x, pos.y, 0)
	SetImageConstantHeight(this, true, pos.z)

/** 设置图像高度 */
public function image.setHeight(real z)
	SetImageConstantHeight(this, true, z)

/** 设置图像高度为0(在地面上) */
public function image.wrap()
	SetImageConstantHeight(this, false, 0)

/**使用colorA元组设置图像颜色及透明度*/
public function image.setColor(colorA col)
	SetImageColor(this, col.red, col.green, col.blue, col.alpha)

/**使用color元组设置图像颜色*/
public function image.setColor(color col)
	SetImageColor(this, col.red, col.green, col.blue, 255)

@deprecated("use ImageLayer instead of Layer.")
public function image.setLevel(Layer layer)
	SetImageType(this, layer castTo int + 1)

/** 改变图像的类型并设置层级 */
public function image.setLevel(ImageLayer layer)
	SetImageType(this, layer castTo int + 1)

/** 销毁图像 */
public function image.remove()
	if this == null
		error("销毁图像空指针，不存在该图像")
	DestroyImage(this)

